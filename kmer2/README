README file for Kmer2 sub-project

the kmer hadoop application is a simple application that processes reads in parallel, calculates kmer's and
inserts them into the cassandra datastore.  Its a pretty simple hadoop application with just a map phase, no
reduce steps are needed.   To run, see below.

The difference between this app and the kmer app is that this gets the reads from cassandra whereas the latter
gets it from a file.  

To Build
--------


Step 0: dependencies

This is dependent on Log4J, apache commons-cli and apache common-logging and hadoop-core.
maven repositories so you don't need to do anything, maven will just find and install them.

However, the cassandra and trift libraries are not in maven repos, so you need to manually add them
to your local repo.  Go to ./lib and run the script there.

   % cd lib; ./installLibsInMaven.sh

this will package cassandra version 0.6.0-beta2 and libtrift as maven objects in your local repository
(stored in ~/.m2)

Step 1: build

the build targer is a JAR library called kmerHadoopApp-0.1.jar  (obviously the 0.1 is the version number and
that may be different).  Once built the file is located in

   ./target/kmerCassandraHadoopApp-0.1.jar

to build it, you will need maven2 installed.

   % mvn package

you may also want to build the javadocs using

   % mvn javadoc:javadoc

this will put the docs in ./target/site/apidocs/index.html


To Configure:
-------------

configuration of the application is done via a kmer-conf.xml file that should be somewhere in the CLASSPATH when
run.

file: kmer2-conf.xml
<?xml version="1.0" ?>
<configuration>
    <property>
        <name>version</name>
        <value>0.1</value>
    </property>
    <property>
        <name>cassandrahost</name>
        <value>thorium1</value>
    </property>
    <property>
        <name>cassandraport</name>
        <value>9160</value>
    </property>
    <property>
        <name>mapred.max.split.size</name>
        <value>3000000</value>
    </property>
</configuration>

you will probably need to change the cassandrahost.  the maxsplitsize effects the degree of parallelization.  If
the file is split across DFS hosts, then it should automatically set the number of map processes.  however, i've
had some difficulty getting the right number of map processes, and this property helps to define that.


To Run:
-------

copy the kmerHadoopApp-0.1.jar to the hadoop root directory, and execute

   % cd ~/hadoop (home of hadoop)
   % ./bin/hadoop jar ./kmerCassandraHadoopApp-0.1.jar <input fasta file> <kmer length> <cassandra table> <output dir>

so for example:

   % ./bin/hadoop jar kmerCassandraHadoopApp-0.1.jar reads 20 hash 

once running, go to:

   http://localhost:50030  (assuming that localhost is where hadoop is running)


